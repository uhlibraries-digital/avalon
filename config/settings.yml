name: "Avalon Media System" # used in page titles
domain:
  host: localhost
  port: 80
  protocol: http
dropbox:
  path: <%= ENV['DROPBOX_PATH'] %>
  upload_uri: <%= ENV['DROPBOX_UPLOAD_URI'] %>
  # google_drive:
  #   client_id: id
  #   client_secret: secret
  #   redis_token_store_url: redis://host:port # if different from Avalon's Redis
encoding:
  engine_adapter: ffmpeg
  presets_path: config/ffmpeg_presets.yml
  encode_limit: 2
mediainfo:
  path: "/usr/bin/mediainfo --urlencode" # Fixes mediainfo v20.03 bug with S3 presigned URL
ffmpeg:
  path: "/usr/local/bin/ffmpeg"
email:
  mailer: :smtp
  config:
    address: mail-relay.university.edu
    port: 25
    enable_starttls_auto: false
  comments: "avalon-comments@example.edu"
  notification: "avalon-notifications@example.edu"
  support: "avalon-support@example.edu"
solr:
  configset: avalon
  configset_source_path: <%= File.join(Rails.root, 'solr', 'config') %>
  collection_options:
    async:
    auto_add_replicas:
    collection:
      config_name: avalon
    create_node_set:
    max_shards_per_node:
    num_shards: 1
    replication_factor:
    router:
      name:
      field:
    rule:
    shards:
    snitch:
zookeeper:
  connection_str: "localhost:9983/configs"
streaming:
  server: :generic
  stream_token_ttl: 20 #minutes
  content_path: "/srv/avalon/content"
  rtmp_base: "rtmp://localhost/avalon"
  http_base: "http://localhost:3000/streams"
  default_quality: "auto"
redis:
  host: localhost
  port: 6379
  db: 0
groups:
  system_groups: [administrator, group_manager, manager]
master_file_management:
  strategy: "none" #'delete', or 'move' (for move uncomment and configure next line)
  #path: '/path/to/move/to'
bib_retriever:
  default:
    protocol: sru
    url: http://zgate.example.edu:9000/exampledb
    query: rec.id='%s'
    retriever_class: "Avalon::BibRetriever::SRU"
    retriever_class_require: "avalon/bib_retriever/sru"
controlled_vocabulary:
  path: config/controlled_vocabulary.yml
encode_throttling:
  create_jobs_throttle_threshold: 2
  create_jobs_spacing: 5
  update_jobs_throttle_threshold: 3
  update_jobs_spacing: 10
auth:
  registerable: false
  devise_strategy: "saml"
  #   configuration:
  #     - :name: Avalon Lti OAuth
  #       :provider: :lti
  #       :hidden: true
  #       :params:
  #         :oauth_credentials:
  #           somekey: somesecret
saml:
  assertion_consumer_service_url: "http://localhost:3000/users/saml/auth"
  assertion_consumer_service_binding: "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
  name_identifier_format: "urn:oasis:names:tc:SAML:2.0:nameid-format:transient"
  sp_entity_id: "http://localhost:3000/users/saml/metadata"
  authn_context: "urn:oasis:names:tc:SAML:2.0:ac:classes:Password"
  security_assertions_encrypted: false
  idp_sso_service_url: "http://localhost:8888/simplesaml/saml2/idp/SSOService.php"
  idp_slo_service_url: "http://localhost:8888/simplesaml/saml2/idp/SingleLogoutService.php"
  idp_cert: "SOME_IDP_CERT"
# google_analytics_tracking_id: "someid"
supplemental_files:
  proxy: false
waveform:
  player_width: 1200 #pixels
  finest_zoom: 5 #seconds
  sample_rate: 41000
active_storage:
  service: local
  #bucket: supplementalfiles
archivesspace:
  public_url: https://public.aspace.org
  endpoint: http://staff.aspace.org::8089
  username: aspace_user
  password: aspace_password
greens:
  base_uri: https://ark.example.com/
  endpoint: https://ark.example.com/api/
  prefix: do
  api_key: "abcd0000"
alertmanager:
  endpoint: https://example.com/alerts
  id: 'avalon'
