name: 'UH Libraries Audio/Video Repository' # used in page titles
domain:
  host: localhost
  port: 80
  protocol: http
dropbox:
  path: /var/avalon/dropbox
  upload_uri: 'V:\test\'
encoding:
  engine_adapter: matterhorn
matterhorn:
  root: 'http://localhost:8080/'
  baseApplication: 'avalon'
  cleanup_log: 'log/cleanup_jobs.log'
mediainfo:
  path: '/usr/bin/mediainfo'
ffmpeg:
  path: '/usr/bin/ffmpeg'
email:
  comments: 'avalon-comments@example.edu'
  notification: 'avalon-notifications@example.edu'
  support: 'avalon-support@example.edu'
solr:
  configset: avalon
  configset_source_path: <%= File.join(Rails.root, 'solr', 'config') %>
  collection_options:
    async:
    auto_add_replicas:
    collection:
      config_name: avalon
    create_node_set:
    max_shards_per_node:
    num_shards: 1
    replication_factor:
    router:
      name:
      field:
    rule:
    shards:
    snitch:
#zookeeper:
#  connection_str: "localhost:9983/configs"
streaming:
  server: :generic
  stream_token_ttl: 20 #minutes
  content_path: '/var/avalon/rtmp_streams'
  rtmp_base: 'rtmp://localhost/avalon'
  http_base: 'http://localhost/streams'
  default_quality: 'low'
groups:
  system_groups: [administrator, group_manager, manager]
master_file_management:
  strategy: 'delete' #'delete', or 'move' (for move uncomment and configure next line)
  #path: '/path/to/move/to'
#bib_retriever:
#  protocol: sru
#  url: http://zgate.example.edu:9000/exampledb
#  query: rec.id='%s'
controlled_vocabulary:
  path: config/controlled_vocabulary.yml
auth:
  configuration:
    - :name: Avalon Test Auth
      :provider: :identity
      :params:
        :fields:
        - :email
#          <% if ENV['LTI_AUTH_KEY'] %>
#    - :name: Avalon Lti OAuth
#      :provider: :lti
#      :hidden: true
#      :params:
#        :oauth_credentials:
#          <%= ENV['LTI_AUTH_KEY'] %>: <%= ENV['LTI_AUTH_SECRET'] %>
#            <% end %>
